import{aS as e,aV as o,ck as t,ca as n,ch as a,cl as r,cm as s,c7 as i,c6 as c,c4 as u,c5 as d,aW as l,ce as T,cn as k,c1 as m,aU as p,aX as g,co as v,cp as w,bX as A,c2 as S,c8 as P,bY as f,b_ as b}from"./index.js";import{n as h,c as y}from"./if-defined.js";import"./index20.js";import"./index18.js";const I={async getTokenList(){var o;const n=e.state.activeCaipNetwork,a=await t.fetchSwapTokens({chainId:null==n?void 0:n.caipNetworkId});return(null==(o=null==a?void 0:a.tokens)?void 0:o.map((e=>({...e,eip2612:!1,quantity:{decimals:"0",numeric:"0"},price:0,value:0}))))||[]},async fetchGasPrice(){var o,a;const r=e.state.activeCaipNetwork;if(!r)return null;try{if("solana"===r.chainNamespace){const e=null==(a=await(null==(o=n)?void 0:o.estimateGas({chainNamespace:"solana"})))?void 0:a.toString();return{standard:e,fast:e,instant:e}}return await t.fetchGasPrice({chainId:r.caipNetworkId})}catch{return null}},async fetchSwapAllowance({tokenAddress:e,userAddress:o,sourceTokenAmount:a,sourceTokenDecimals:r}){const s=await t.fetchSwapAllowance({tokenAddress:e,userAddress:o});if((null==s?void 0:s.allowance)&&a&&r){const e=n.parseUnits(a,r)||0;return BigInt(s.allowance)>=e}return!1},async getMyTokensWithBalance(n){const a=o.state.address,r=e.state.activeCaipNetwork;if(!a||!r)return[];const s=(await t.getBalance(a,r.caipNetworkId,n)).balances.filter((e=>"0"!==e.quantity.decimals));return o.setTokenBalance(s,e.state.activeChain),this.mapBalancesToSwapTokens(s)},mapBalancesToSwapTokens:o=>(null==o?void 0:o.map((o=>({...o,address:(null==o?void 0:o.address)?o.address:e.getActiveNetworkTokenAddress(),decimals:parseInt(o.quantity.decimals,10),logoUri:o.iconUrl,eip2612:!1}))))||[]},N={getGasPriceInEther:(e,o)=>Number(o*e)/1e18,getGasPriceInUSD(e,o,t){const n=N.getGasPriceInEther(o,t);return a.bigNumber(e).times(n).toNumber()},getPriceImpact({sourceTokenAmount:e,sourceTokenPriceInUSD:o,toTokenPriceInUSD:t,toTokenAmount:n}){const r=a.bigNumber(e).times(o),s=a.bigNumber(n).times(t);return r.minus(s).div(r).times(100).toNumber()},getMaxSlippage(e,o){const t=a.bigNumber(e).div(100);return a.multiply(o,t).toNumber()},getProviderFee:(e,o=.0085)=>a.bigNumber(e).times(o).toString(),isInsufficientNetworkTokenForGas(e,o){const t=o||"0";return!!a.bigNumber(e).eq(0)||a.bigNumber(a.bigNumber(t)).gt(e)},isInsufficientSourceTokenForSwap(e,o,t){var n,r;const s=null==(r=null==(n=null==t?void 0:t.find((e=>e.address===o)))?void 0:n.quantity)?void 0:r.numeric;return a.bigNumber(s||"0").lt(e)},getToTokenAmount({sourceToken:e,toToken:o,sourceTokenPrice:t,toTokenPrice:n,sourceTokenAmount:r}){if("0"===r)return"0";if(!e||!o)return"0";const s=e.decimals,i=t,c=o.decimals,u=n;if(u<=0)return"0";const d=a.bigNumber(r).times(.0085),l=a.bigNumber(r).minus(d).times(a.bigNumber(10).pow(s)),T=a.bigNumber(i).div(u),k=s-c;return l.times(T).div(a.bigNumber(10).pow(k)).div(a.bigNumber(10).pow(c)).toFixed(c).toString()}},U=15e4,E={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:m.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},B=s(E),C={state:B,subscribe:e=>w(B,(()=>e(B))),subscribeKey:(e,o)=>v(B,e,o),getParams(){var o,t,n,r,s,i,c,u;const d=e.state.activeCaipAddress,T=e.state.activeChain,k=l.getPlainAddress(d),m=e.getActiveNetworkTokenAddress(),v=p.getConnectorId(T);if(!k)throw new Error("No address found to swap the tokens from.");const w=!(null==(o=B.toToken)?void 0:o.address)||!(null==(t=B.toToken)?void 0:t.decimals),A=!(null==(n=B.sourceToken)?void 0:n.address)||!(null==(r=B.sourceToken)?void 0:r.decimals)||!a.bigNumber(B.sourceTokenAmount).gt(0),S=!B.sourceTokenAmount;return{networkAddress:m,fromAddress:k,fromCaipAddress:d,sourceTokenAddress:null==(s=B.sourceToken)?void 0:s.address,toTokenAddress:null==(i=B.toToken)?void 0:i.address,toTokenAmount:B.toTokenAmount,toTokenDecimals:null==(c=B.toToken)?void 0:c.decimals,sourceTokenAmount:B.sourceTokenAmount,sourceTokenDecimals:null==(u=B.sourceToken)?void 0:u.decimals,invalidToToken:w,invalidSourceToken:A,invalidSourceTokenAmount:S,availableToSwap:d&&!w&&!A&&!S,isAuthConnector:v===g.CONNECTOR_ID.AUTH}},setSourceToken(e){if(!e)return B.sourceToken=e,B.sourceTokenAmount="",void(B.sourceTokenPriceInUSD=0);B.sourceToken=e,D.setTokenPrice(e.address,"sourceToken")},setSourceTokenAmount(e){B.sourceTokenAmount=e},setToToken(e){if(!e)return B.toToken=e,B.toTokenAmount="",void(B.toTokenPriceInUSD=0);B.toToken=e,D.setTokenPrice(e.address,"toToken")},setToTokenAmount(e){B.toTokenAmount=e?a.formatNumberToLocalString(e,6):""},async setTokenPrice(e,o){let t=B.tokensPriceMap[e]||0;t||(B.loadingPrices=!0,t=await D.getAddressPrice(e)),"sourceToken"===o?B.sourceTokenPriceInUSD=t:"toToken"===o&&(B.toTokenPriceInUSD=t),B.loadingPrices&&(B.loadingPrices=!1),D.getParams().availableToSwap&&D.swapTokens()},switchTokens(){if(B.initializing||!B.initialized)return;const e=B.toToken?{...B.toToken}:void 0,o=B.sourceToken?{...B.sourceToken}:void 0,t=e&&""===B.toTokenAmount?"1":B.toTokenAmount;D.setSourceToken(e),D.setToToken(o),D.setSourceTokenAmount(t),D.setToTokenAmount(""),D.swapTokens()},resetState(){B.myTokensWithBalance=E.myTokensWithBalance,B.tokensPriceMap=E.tokensPriceMap,B.initialized=E.initialized,B.sourceToken=E.sourceToken,B.sourceTokenAmount=E.sourceTokenAmount,B.sourceTokenPriceInUSD=E.sourceTokenPriceInUSD,B.toToken=E.toToken,B.toTokenAmount=E.toTokenAmount,B.toTokenPriceInUSD=E.toTokenPriceInUSD,B.networkPrice=E.networkPrice,B.networkTokenSymbol=E.networkTokenSymbol,B.networkBalanceInUSD=E.networkBalanceInUSD,B.inputError=E.inputError,B.myTokensWithBalance=E.myTokensWithBalance},resetValues(){var e;const{networkAddress:o}=D.getParams(),t=null==(e=B.tokens)?void 0:e.find((e=>e.address===o));D.setSourceToken(t),D.setToToken(void 0)},getApprovalLoadingState:()=>B.loadingApprovalTransaction,clearError(){B.transactionError=void 0},async initializeState(){if(!B.initializing){if(B.initializing=!0,!B.initialized)try{await D.fetchTokens(),B.initialized=!0}catch(e){B.initialized=!1,c.showError("Failed to initialize swap"),i.goBack()}B.initializing=!1}},async fetchTokens(){var e;const{networkAddress:o}=D.getParams();await D.getTokenList(),await D.getNetworkTokenPrice(),await D.getMyTokensWithBalance();const t=null==(e=B.tokens)?void 0:e.find((e=>e.address===o));t&&(B.networkTokenSymbol=t.symbol,D.setSourceToken(t),D.setSourceTokenAmount("1"))},async getTokenList(){const e=await I.getTokenList();B.tokens=e,B.popularTokens=e.sort(((e,o)=>e.symbol<o.symbol?-1:e.symbol>o.symbol?1:0)),B.suggestedTokens=e.filter((e=>!!m.SWAP_SUGGESTED_TOKENS.includes(e.symbol)),{})},async getAddressPrice(e){var o,n;const a=B.tokensPriceMap[e];if(a)return a;const r=await t.fetchTokenPrice({addresses:[e]}),s=(null==r?void 0:r.fungibles)||[],i=[...B.tokens||[],...B.myTokensWithBalance||[]],c=null==(o=null==i?void 0:i.find((o=>o.address===e)))?void 0:o.symbol,u=(null==(n=s.find((e=>e.symbol.toLowerCase()===(null==c?void 0:c.toLowerCase()))))?void 0:n.price)||0,d=parseFloat(u.toString());return B.tokensPriceMap[e]=d,d},async getNetworkTokenPrice(){var e;const{networkAddress:o}=D.getParams(),n=null==(e=(await t.fetchTokenPrice({addresses:[o]}).catch((()=>(c.showError("Failed to fetch network token price"),{fungibles:[]})))).fungibles)?void 0:e[0],a=(null==n?void 0:n.price.toString())||"0";B.tokensPriceMap[o]=parseFloat(a),B.networkTokenSymbol=(null==n?void 0:n.symbol)||"",B.networkPrice=a},async getMyTokensWithBalance(e){const o=await k.getMyTokensWithBalance(e),t=k.mapBalancesToSwapTokens(o);t&&(await D.getInitialGasPrice(),D.setBalances(t))},setBalances(o){const{networkAddress:t}=D.getParams(),n=e.state.activeCaipNetwork;if(!n)return;const r=o.find((e=>e.address===t));o.forEach((e=>{B.tokensPriceMap[e.address]=e.price||0})),B.myTokensWithBalance=o.filter((e=>e.address.startsWith(n.caipNetworkId))),B.networkBalanceInUSD=r?a.multiply(r.quantity.numeric,r.price).toString():"0"},async getInitialGasPrice(){var o,t;const n=await I.fetchGasPrice();if(!n)return{gasPrice:null,gasPriceInUSD:null};if("solana"===(null==(t=null==(o=e.state)?void 0:o.activeCaipNetwork)?void 0:t.chainNamespace))return B.gasFee=n.standard??"0",B.gasPriceInUSD=a.multiply(n.standard,B.networkPrice).div(1e9).toNumber(),{gasPrice:BigInt(B.gasFee),gasPriceInUSD:Number(B.gasPriceInUSD)};{const e=n.standard??"0",o=BigInt(e),t=BigInt(U),a=N.getGasPriceInUSD(B.networkPrice,t,o);return B.gasFee=e,B.gasPriceInUSD=a,{gasPrice:o,gasPriceInUSD:a}}},async swapTokens(){var e,n;const r=o.state.address,s=B.sourceToken,i=B.toToken,c=a.bigNumber(B.sourceTokenAmount).gt(0);if(c||D.setToTokenAmount(""),!i||!s||B.loadingPrices||!c)return;B.loadingQuote=!0;const u=a.bigNumber(B.sourceTokenAmount).times(10**s.decimals).round(0);try{const o=await t.fetchSwapQuote({userAddress:r,from:s.address,to:i.address,gasPrice:B.gasFee,amount:u.toString()});B.loadingQuote=!1;const c=null==(n=null==(e=null==o?void 0:o.quotes)?void 0:e[0])?void 0:n.toAmount;if(!c)return void T.open({shortMessage:"Incorrect amount",longMessage:"Please enter a valid amount"},"error");const d=a.bigNumber(c).div(10**i.decimals).toString();D.setToTokenAmount(d);D.hasInsufficientToken(B.sourceTokenAmount,s.address)?B.inputError="Insufficient balance":(B.inputError=void 0,D.setTransactionDetails())}catch(d){B.loadingQuote=!1,B.inputError="Insufficient balance"}},async getTransaction(){const{fromCaipAddress:e,availableToSwap:o}=D.getParams(),t=B.sourceToken,n=B.toToken;if(e&&o&&t&&n&&!B.loadingQuote)try{B.loadingBuildTransaction=!0;let o;return o=await I.fetchSwapAllowance({userAddress:e,tokenAddress:t.address,sourceTokenAmount:B.sourceTokenAmount,sourceTokenDecimals:t.decimals})?await D.createSwapTransaction():await D.createAllowanceTransaction(),B.loadingBuildTransaction=!1,B.fetchError=!1,o}catch(a){return i.goBack(),c.showError("Failed to check allowance"),B.loadingBuildTransaction=!1,B.approvalTransaction=void 0,B.swapTransaction=void 0,void(B.fetchError=!0)}},async createAllowanceTransaction(){const{fromCaipAddress:e,sourceTokenAddress:o,toTokenAddress:n}=D.getParams();if(e&&n){if(!o)throw new Error("createAllowanceTransaction - No source token address found.");try{const a=await t.generateApproveCalldata({from:o,to:n,userAddress:e}),r={data:a.tx.data,to:l.getPlainAddress(a.tx.from),gasPrice:BigInt(a.tx.eip155.gasPrice),value:BigInt(a.tx.value),toAmount:B.toTokenAmount};return B.swapTransaction=void 0,B.approvalTransaction={data:r.data,to:r.to,gasPrice:r.gasPrice,value:r.value,toAmount:r.toAmount},{data:r.data,to:r.to,gasPrice:r.gasPrice,value:r.value,toAmount:r.toAmount}}catch(a){return i.goBack(),c.showError("Failed to create approval transaction"),B.approvalTransaction=void 0,B.swapTransaction=void 0,void(B.fetchError=!0)}}},async createSwapTransaction(){var e;const{networkAddress:o,fromCaipAddress:a,sourceTokenAmount:r}=D.getParams(),s=B.sourceToken,u=B.toToken;if(!(a&&r&&s&&u))return;const d=null==(e=n.parseUnits(r,s.decimals))?void 0:e.toString();try{const e=await t.generateSwapCalldata({userAddress:a,from:s.address,to:u.address,amount:d,disableEstimate:!0}),n=s.address===o,r=BigInt(e.tx.eip155.gas),i=BigInt(e.tx.eip155.gasPrice),c={data:e.tx.data,to:l.getPlainAddress(e.tx.to),gas:r,gasPrice:i,value:n?BigInt(d??"0"):BigInt("0"),toAmount:B.toTokenAmount};return B.gasPriceInUSD=N.getGasPriceInUSD(B.networkPrice,r,i),B.approvalTransaction=void 0,B.swapTransaction=c,c}catch(T){return i.goBack(),c.showError("Failed to create transaction"),B.approvalTransaction=void 0,B.swapTransaction=void 0,void(B.fetchError=!0)}},async sendTransactionForApproval(t){var a,r,s,l;const{fromAddress:T,isAuthConnector:k}=D.getParams();B.loadingApprovalTransaction=!0;const m="Approve limit increase in your wallet";k?i.pushTransactionStack({onSuccess(){c.showLoading(m)}}):c.showLoading(m);try{await n.sendTransaction({address:T,to:t.to,data:t.data,value:t.value,chainNamespace:"eip155"}),await D.swapTokens(),await D.getTransaction(),B.approvalTransaction=void 0,B.loadingApprovalTransaction=!1}catch(p){const t=p;B.transactionError=null==t?void 0:t.shortMessage,B.loadingApprovalTransaction=!1,c.showError((null==t?void 0:t.shortMessage)||"Transaction error"),u.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:(null==t?void 0:t.shortMessage)||(null==t?void 0:t.message)||"Unknown",network:(null==(a=e.state.activeCaipNetwork)?void 0:a.caipNetworkId)||"",swapFromToken:(null==(r=D.state.sourceToken)?void 0:r.symbol)||"",swapToToken:(null==(s=D.state.toToken)?void 0:s.symbol)||"",swapFromAmount:D.state.sourceTokenAmount||"",swapToAmount:D.state.toTokenAmount||"",isSmartAccount:(null==(l=o.state.preferredAccountTypes)?void 0:l.eip155)===d.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(t){var r,s,l,T,k,m,p,g,v,w,A,S,P,f;if(!t)return;const{fromAddress:b,toTokenAmount:h,isAuthConnector:y}=D.getParams();B.loadingTransaction=!0;const I=`Swapping ${null==(r=B.sourceToken)?void 0:r.symbol} to ${a.formatNumberToLocalString(h,3)} ${null==(s=B.toToken)?void 0:s.symbol}`,N=`Swapped ${null==(l=B.sourceToken)?void 0:l.symbol} to ${a.formatNumberToLocalString(h,3)} ${null==(T=B.toToken)?void 0:T.symbol}`;y?i.pushTransactionStack({onSuccess(){i.replace("Account"),c.showLoading(I),C.resetState()}}):c.showLoading("Confirm transaction in your wallet");try{const a=[null==(k=B.sourceToken)?void 0:k.address,null==(m=B.toToken)?void 0:m.address].join(","),r=await n.sendTransaction({address:b,to:t.to,data:t.data,value:t.value,chainNamespace:"eip155"});return B.loadingTransaction=!1,c.showSuccess(N),u.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:(null==(p=e.state.activeCaipNetwork)?void 0:p.caipNetworkId)||"",swapFromToken:(null==(g=D.state.sourceToken)?void 0:g.symbol)||"",swapToToken:(null==(v=D.state.toToken)?void 0:v.symbol)||"",swapFromAmount:D.state.sourceTokenAmount||"",swapToAmount:D.state.toTokenAmount||"",isSmartAccount:(null==(w=o.state.preferredAccountTypes)?void 0:w.eip155)===d.ACCOUNT_TYPES.SMART_ACCOUNT}}),C.resetState(),y||i.replace("Account"),C.getMyTokensWithBalance(a),r}catch(U){const t=U;return B.transactionError=null==t?void 0:t.shortMessage,B.loadingTransaction=!1,c.showError((null==t?void 0:t.shortMessage)||"Transaction error"),void u.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:(null==t?void 0:t.shortMessage)||(null==t?void 0:t.message)||"Unknown",network:(null==(A=e.state.activeCaipNetwork)?void 0:A.caipNetworkId)||"",swapFromToken:(null==(S=D.state.sourceToken)?void 0:S.symbol)||"",swapToToken:(null==(P=D.state.toToken)?void 0:P.symbol)||"",swapFromAmount:D.state.sourceTokenAmount||"",swapToAmount:D.state.toTokenAmount||"",isSmartAccount:(null==(f=o.state.preferredAccountTypes)?void 0:f.eip155)===d.ACCOUNT_TYPES.SMART_ACCOUNT}})}},hasInsufficientToken:(e,o)=>N.isInsufficientSourceTokenForSwap(e,o,B.myTokensWithBalance),setTransactionDetails(){const{toTokenAddress:e,toTokenDecimals:o}=D.getParams();e&&o&&(B.gasPriceInUSD=N.getGasPriceInUSD(B.networkPrice,BigInt(B.gasFee),BigInt(U)),B.priceImpact=N.getPriceImpact({sourceTokenAmount:B.sourceTokenAmount,sourceTokenPriceInUSD:B.sourceTokenPriceInUSD,toTokenPriceInUSD:B.toTokenPriceInUSD,toTokenAmount:B.toTokenAmount}),B.maxSlippage=N.getMaxSlippage(B.slippage,B.toTokenAmount),B.providerFee=N.getProviderFee(B.sourceTokenAmount))}},D=r(C),x=A`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`;var F=function(e,o,t,n){var a,r=arguments.length,s=r<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,o,t,n);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(r<3?a(s):r>3?a(o,t,s):a(o,t))||s);return r>3&&s&&Object.defineProperty(o,t,s),s};let M=class extends f{constructor(){super(...arguments),this.text=""}render(){return b`
      <button>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `}tokenTemplate(){return this.imageSrc?b`<wui-image src=${this.imageSrc}></wui-image>`:b`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `}};M.styles=[S,P,x],F([h()],M.prototype,"imageSrc",void 0),F([h()],M.prototype,"text",void 0),M=F([y("wui-token-button")],M);export{D as S};
